// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum SCHEDULE_TYPES {
  class
  work
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String       @unique
  password    String
  salt        String
  schedules   Schedule[]
  studySlots  StudySlot[]
  studyTopics StudyTopic[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt

  @@map("Users")
}

model Schedule {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  type      SCHEDULE_TYPES
  startTime DateTime
  endTime   DateTime
  User      User?          @relation(fields: [userId], references: [id])
  userId    String?        @db.ObjectId
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now()) @updatedAt

  @@map("Schedules")
}

model StudySlot {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  startTime DateTime
  endTime   DateTime
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("StudySlots")
}

model StudyTopic {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  isComplete Boolean? @default(false)
  topic      String
  priority   Int // high->1 medium->2 low->3
  duration   Int // Duration in minutes
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?  @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  @@map("StudyTopics")
}
